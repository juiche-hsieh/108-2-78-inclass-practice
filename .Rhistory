name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
View(listExample)
listExample[[1]]
listExample[[1]]
listExample[[1]]
listExample[[2]]
listExample[[2]]
listExample[[2]]
listExample[[1]]
listExample[[2]]
listExample[[1]]
listExample[[1]]
listExample[[2]]
listExample[[1]]
listExample[[1]]
# 有多少名字可選：
names(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample$student
c(1)
listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
pi[[8]]
pi[[8]]
pi [[8]]
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
pi[[8]]
# gift
pi[[8]]
save(pi[[8]], file="gift")
pi[[8]]
gift <- pi[[8]]
save(gift, file="gift")
# gift
pi[[8]]
gift <- pi[[8]]
save(gift, file="gift.Rda") # gift
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
time_place <- course[["time_place"]]
# time_place
course[["time_place"]]
# time_place
time_place <- course[["time_place"]]
save(time_place, file="time_place.Rda")
# time_place
vectorExample
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample
vectorExample[c(1,3)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
# 顯示到第一層
str(listExample, max.level=1)
listExample([c(1,2)], max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level = 1)
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
type(course)
typeof(course)
class(course)
# course_update
typeof(course)
class(approve)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
typeof(course)
class(approve)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
course <- list(
approve = list(T),
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
str(course)
# course
course <- list(
approve = T,
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
str(course)
# course
typeof(course)
class(approve)
course <- list(
approve = T,
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
str(course)
# course
View(course)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course <- list(
approve = T,
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
typeof(course)
class(approve)
course <- list(
approve = T,
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
typeof(course)
class(course[["approve"])
course <- list(
approve = T,
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
typeof(course)
(course[["approve"])
course <- list(
approve = T,
course_info = list(
course_name = "會計學",
type = "必",
credits = c(3),
time_place = list(
list(
weekday = "星期三",
time_slots = c(7, 8, 9),
classroom = "商2F05"
)
))
)
typeof(course)
class(course[["approve"]])
# course_update
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
typeof(course)
class(course[["approve"]])
# course_update
typeof(course)
logical(course[["approve"]])
typeof(course)
as.logical(course[["approve"]])
# course_update
course[[type]] <- "選"
course[[type]] <- "選"
course[["type"]] <- "選"
as.logical(course[["approve"]])
save(course_update, file="course_update.list")
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
# course_update
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
str(course)
# course_update
course[["type"]] <- "選"
as.logical(course[["approve"]])
course
course_update <- course
save(course_update, file="course_update.list")
str(course)
# course_update
course[["type"]] <- "選"
as.logi(course[["approve"]])
course[["type"]] <- "選"
as.logical(course[["approve"]])
course
course_update <- course
save(course_update, file="course_update.list")
str(course)
# course_update
course[["type"]] <- "選"
as.logical(course[["approve"]])
course
course_update <- course
save(course_update, file="course_update.list")
# course_update
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
# course_update
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
class(approve)
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
class(cpurse[["approve"])
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
class(course[["approve"])
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
class(course[["approve"]])
# course_update
time_place <- course[["time_place"]]
save(time_place, file="time_place.Rda")
# time_place
time_place <- course[["time_place"]]
save(time_place, file="time_place.Rda")
str(course[["time_place"]])
# time_place
course[["type"]] <- "選"
as.logical(course[["approve"]])
course_update <- course
save(course_update, file="course_update.list")
# course_update
class(course[["approve"]])
# course_update
course[[2]]$type<-"選"
course$approve<-"F"
course->course_update
# course_update
course[[2]]$type<-"選"
course$approve<-"F"
course->course_update
class(course)
# course_update
course[[2]]$type<-"選"
course$approve<-"F"
course->course_update
class(approve)
# course_update
course[[2]]$type<-"選"
course$approve<-"F"
course->course_update
class(course$approve)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
str(course)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
str(course)
course[[2]]$type<-"選"
course$approve<-"F"
course->course_update
str(course_update)
class(course$approve)
# course_update
course$type<-"選"
course$approve<-"F"
course->course_update
class(course$approve)
# course_update
course$type <- "選"
as.logical(course$approve)
course->course_update
class(course$approve)
course[[2]][[4]]->time_place
str(time_place)
time_place <- course[["time_place"]]
# time_place
time_place <- course[["time_place"]]
str(time_place)
# time_place
time_place <- course$time_place
# time_place
time_place <- course$time_place
# time_place
time_place <- course$time_place
str(time_place))
time_place <- course$time_place
str(time_place)
# time_place
course[[2]][[4]]->time_place
str(time_place)
# time_place
# course_update
course$type <- "選"
as.logical(course$approve)
course->course_update
str(course)
# course_update
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
str(course)
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
str(course)
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(approve)
# course_update
course[[2]]$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(course$approve = T)
# course_update
course[[2]]$type <- "選"
as.logical(course$approve = "T")
# course_update
course[[2]]$type <- "選"
as.logical(course$approve)
course -> course_update
str(course)
course_update[[2]][["teacher"]] <- "紀學檜"
course_update2 <- course_update
# course_update2
# course_update
course[[2]]$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(course[[3]]$approve)
# course_update
course[[2]]$type <- "選"
as.logical(course[[1]]$approve)
# course_update
course[[2]]$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
as.logical(course[[2]]$approve)
course -> course_update
str(course)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
str(course)
# course_update
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
course$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
course_update[[2]][["teacher"]] <- "紀學檜"
course_update2 <- course_update
# course_update2
# course_update
course[[2]]$type <- "選"
as.logical(course[[1]]$approve)
# course_update
course[[2]]$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
# course_update
course[[2]]$type <- "選"
as.logical(course[[0]]$approve)
# course_update
course[[2]]$type <- "選"
as.logical(course[[2]]$approve)
course -> course_update
str(course)
